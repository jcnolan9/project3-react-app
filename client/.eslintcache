[{"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\index.js":"1","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\App.js":"2","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\reportWebVitals.js":"3","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\Home.js":"4","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\Signup.js":"5","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\Login.js":"6","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\SingleReminder.js":"7","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\components\\Header.js":"8","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\components\\ReminderForm.js":"9","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\utils\\auth.js":"10","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\utils\\mutations.js":"11","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\utils\\queries.js":"12","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\components\\ReminderList.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":1628,"mtime":1646363488909,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1858,"mtime":1646470977682,"results":"18","hashOfConfig":"15"},{"size":5124,"mtime":1646471832124,"results":"19","hashOfConfig":"15"},{"size":3062,"mtime":1646466020669,"results":"20","hashOfConfig":"15"},{"size":1897,"mtime":1646472929796,"results":"21","hashOfConfig":"15"},{"size":1504,"mtime":1646465783630,"results":"22","hashOfConfig":"15"},{"size":6211,"mtime":1646468312075,"results":"23","hashOfConfig":"15"},{"size":1082,"mtime":1646189963177,"results":"24","hashOfConfig":"15"},{"size":1417,"mtime":1646388530478,"results":"25","hashOfConfig":"15"},{"size":922,"mtime":1646458940067,"results":"26","hashOfConfig":"15"},{"size":1624,"mtime":1646471114181,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1j3mfqd",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\index.js",[],["58","59"],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\App.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\Home.js",["60","61","62"],"import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport ReminderForm from '../components/ReminderForm';\r\nimport ReminderList from '../components/ReminderList';\r\n\r\nimport { QUERY_USER_CONTACTS, QUERY_USER_REMINDERS, QUERY_USER } from '../utils/queries';\r\nimport Auth from '../utils/auth'\r\n\r\n\r\n\r\nconst Home = () => {\r\n  \r\n\r\n    let user\r\n    if(Auth.loggedIn()) {\r\n        user = Auth.getProfile().data.userName\r\n    }\r\n    //if nobody is logged in doing Ath.getProfile()... breaks the page so it must be in conditional to render at all times \r\n    \r\n    //this must be named \"data\"\r\n    //loading, data, and err are keywords\r\n    const { loading, data } = useQuery(QUERY_USER_CONTACTS, {\r\n        variables: { userName: user }\r\n    })\r\n    const contacts = data?.userContacts || []\r\n    //you cannot do data.userContacts but the data?.userContacts syntax works for whatever reason\r\n\r\n\r\n    //if more than 1 query on a page have to do \"data:reminderData\"\r\n    const { loading: remindersLoading, data: remindersData } = useQuery(QUERY_USER_REMINDERS, {\r\n        variables: {userName: user}\r\n    })\r\n    const reminders = remindersData?.userReminders || []\r\n    console.log(\"remindersData\", reminders)\r\n\r\n    // let myUser\r\n\r\n\r\n\r\n    // if(Auth.loggedIn()) {\r\n    //     const { loading: userLoading, data: userData } = useQuery(QUERY_USER, {\r\n    //         variables: {_id: Auth.getProfile().data._id}\r\n    //     })\r\n    //     myUser = userData?.user || []\r\n    //     console.log(\"userData\", myUser)\r\n    // }\r\n    \r\n    return (\r\n        <main>\r\n            \r\n            <div>\r\n                <ReminderForm contacts={contacts} user={user}/>\r\n            </div>\r\n            <div>\r\n                <ReminderList reminders={reminders} title=\"Upcoming Reminders\"/>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\Signup.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\Login.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\SingleReminder.js",["63","64","65"],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\components\\Header.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\components\\ReminderForm.js",["66","67","68"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\n import { ADD_REMINDER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst ReminderForm = ({ contacts, user }) => {\r\n\r\n    console.log(\"MyUser:\", user)\r\n\r\n    const [reminderContact, setReminderContact] = useState('')\r\n    const [reminderContactType, setReminderContactType] = useState('')\r\n    const [reminderDate, setReminderDate] = useState(Date.now())\r\n    const [reminderMessage, setReminderMessage] = useState('')\r\n\r\n    const [addReminder, { error, data }] = useMutation(ADD_REMINDER)\r\n\r\n\r\n    // console.log(\"Logged In:\", Auth.getProfile().data.username)\r\n    \r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        try {\r\n            const { data } = await addReminder({\r\n                variables: {\r\n                    contact: reminderContact,\r\n                    contactType: reminderContactType,\r\n                    date: reminderDate,\r\n                    message: reminderMessage,\r\n                    reminderOfUser: user\r\n                }\r\n            })\r\n\r\n            setReminderContact('')\r\n            setReminderContactType('')\r\n            setReminderDate(Date.now().toLocaleString('en-US'))\r\n            setReminderMessage('')\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        switch(name) {\r\n            case \"contact\":\r\n                setReminderContact(value)\r\n                break\r\n            case \"contactType\":\r\n                setReminderContactType(value)\r\n                break\r\n            case \"date\":\r\n                setReminderDate(value)\r\n                break\r\n            case \"message\":\r\n                setReminderMessage(value)\r\n                break\r\n        }\r\n        console.log(\"contact\", {\r\n            contact: reminderContact,\r\n            contactType: reminderContactType,\r\n            date: reminderDate,\r\n            message: reminderMessage,\r\n            reminderOfUser: user\r\n        })\r\n    }\r\n\r\n    //if there is only 1 option in the select tag below the onChange for whatever reason never registers\r\n    //adding a blank tag as the first option and forcing the user to switch the mapped option below fixes the issue\r\n\r\n    return (\r\n        <div>\r\n           \r\n            {Auth.loggedIn() ?\r\n                <div className='card'>\r\n               \r\n                    <h2 className='login-header text-light reminder-form-card-header'>Create Reminder</h2>\r\n\r\n                    <form onSubmit={handleFormSubmit}>\r\n                        <div className='container '>\r\n                            \r\n                                <label  for=\"contactList\">Contact Name:</label>\r\n                                <select className='reminder-form-input' name=\"contact\" id=\"contactList\" value={reminderContact} onChange={handleChange}>\r\n                                    <option key=\"0\" value=\"\"></option>\r\n                                    {\r\n                                        contacts.map((userContact) => (\r\n                                            <option key={userContact._id} value={userContact._id}>\r\n                                                {`${userContact.firstName} ${userContact.lastName}`}\r\n                                            </option>\r\n                                        ))\r\n                                    }\r\n                                </select>\r\n                           \r\n                            \r\n                            <br></br>\r\n                            \r\n                            <label>\r\n                                How to Reach:\r\n                                <input className='reminder-form-input-radio' type=\"radio\" id=\"text\" name=\"contactType\" value=\"text\" onChange={handleChange} />\r\n                                <label for=\"text\">Text</label>\r\n                                \r\n                                <input className='reminder-form-input-radio' type=\"radio\" id=\"email\" name=\"contactType\" value=\"email\" onChange={handleChange}/>\r\n                                <label for=\"email\">Email</label>\r\n                                \r\n                                <input className='reminder-form-input-radio' type=\"radio\" id=\"phone\" name=\"contactType\" value=\"phone\" onChange={handleChange}/>\r\n                                <label for=\"text\">Phone Call</label>\r\n                            </label>\r\n\r\n                            <br></br>\r\n                            <label className='' for=\"reminder-date\">Date:</label>\r\n                            <input className='reminder-form-input' type=\"text\" name='date' id=\"reminder-date\" value={reminderDate} onChange={handleChange}></input>\r\n                            \r\n                            <br></br>\r\n\r\n                            <label for=\"message\">Message:</label><br></br>\r\n                            <textarea className='reminder-form-message' name=\"message\"\r\n                                id=\"message\" \r\n                                placeholder=\"What do want to talk about...\" \r\n                                value={reminderMessage}\r\n                                onChange={handleChange}\r\n                            ></textarea>\r\n                        \r\n                            <br></br>\r\n                            \r\n                        </div>\r\n\r\n                        <button className='btn btn-reverse btn-reminder' type='submit'>Create Reminder</button>\r\n\r\n                        {error && (\r\n                            <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n                                 {error.message}\r\n                            </div>\r\n                        )}\r\n                    </form>\r\n                </div>\r\n            : (\r\n                <p>\r\n                    Please sign in to create a reminder. Please{' '}\r\n                    <Link to=\"/login\">login</Link> or <Link to=\"/signup\">singup.</Link>\r\n                </p>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReminderForm","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\utils\\auth.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\utils\\mutations.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\utils\\queries.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\components\\ReminderList.js",["69","70","71"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Auth from '../utils/auth'\r\n\r\nconst ReminderList = ({ reminders, title }) => {\r\n    // console.log(\"reminders\", reminders)\r\n   \r\n    if(!Auth.loggedIn() || !reminders.length) {\r\n        return (<h2>No Reminders Yet. Create some to keep in touch with your contacts!</h2>)\r\n    }  \r\n\r\n    const imagePicker = (contactType) => {\r\n        if(contactType == 'phone call') {\r\n            return \"phone.png\"\r\n        }\r\n        else if(contactType == \"text\") {\r\n            return \"text.png\"\r\n        }\r\n        return \"email.png\"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='reminder-list-title'>{title}</h2>\r\n            {reminders &&\r\n                reminders.map((reminder) => (\r\n                    <div className=\"card card-reminder-list\" key={reminder._id}>\r\n                        \r\n                        \r\n                        <h3 className='text-light reminder-header'>{reminder.contactType} - {`${reminder.contact.firstName} ${reminder.contact.lastName}`}</h3>\r\n                        \r\n                        <img src={imagePicker(reminder.contactType)}></img>\r\n                        <p className=\"reminder-list-p\">{reminder.date}</p>\r\n                        <Link to={`/reminders/${reminder._id}`}>\r\n                            <p className='reminder-list-p'>\r\n                                View and Update this Reminder\r\n                            </p>\r\n                        </Link>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReminderList",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":6,"column":53,"nodeType":"78","messageId":"79","endLine":6,"endColumn":63},{"ruleId":"76","severity":1,"message":"80","line":22,"column":13,"nodeType":"78","messageId":"79","endLine":22,"endColumn":20},{"ruleId":"76","severity":1,"message":"81","line":30,"column":22,"nodeType":"78","messageId":"79","endLine":30,"endColumn":38},{"ruleId":"82","severity":1,"message":"83","line":25,"column":24,"nodeType":"84","messageId":"85","endLine":25,"endColumn":26},{"ruleId":"82","severity":1,"message":"83","line":28,"column":29,"nodeType":"84","messageId":"85","endLine":28,"endColumn":31},{"ruleId":"86","severity":1,"message":"87","line":50,"column":13,"nodeType":"88","endLine":50,"endColumn":58},{"ruleId":"76","severity":1,"message":"89","line":17,"column":34,"nodeType":"78","messageId":"79","endLine":17,"endColumn":38},{"ruleId":"76","severity":1,"message":"89","line":26,"column":21,"nodeType":"78","messageId":"79","endLine":26,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":48,"column":9,"nodeType":"92","messageId":"93","endLine":61,"endColumn":10},{"ruleId":"82","severity":1,"message":"83","line":13,"column":24,"nodeType":"84","messageId":"85","endLine":13,"endColumn":26},{"ruleId":"82","severity":1,"message":"83","line":16,"column":29,"nodeType":"84","messageId":"85","endLine":16,"endColumn":31},{"ruleId":"86","severity":1,"message":"87","line":32,"column":25,"nodeType":"88","endLine":32,"endColumn":70},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'QUERY_USER' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'remindersLoading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]