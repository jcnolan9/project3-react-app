[{"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\index.js":"1","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\App.js":"2","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\reportWebVitals.js":"3","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\Home.js":"4","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\Signup.js":"5","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\Login.js":"6","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\SingleReminder.js":"7","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\components\\Header.js":"8","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\components\\ReminderForm.js":"9","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\utils\\auth.js":"10","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\utils\\mutations.js":"11","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\utils\\queries.js":"12","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\components\\ReminderList.js":"13","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\components\\ContactForm.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":1628,"mtime":1646363488909,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":1982,"mtime":1646481723151,"results":"19","hashOfConfig":"16"},{"size":5124,"mtime":1646471832124,"results":"20","hashOfConfig":"16"},{"size":3062,"mtime":1646466020669,"results":"21","hashOfConfig":"16"},{"size":1897,"mtime":1646472929796,"results":"22","hashOfConfig":"16"},{"size":1504,"mtime":1646483647190,"results":"23","hashOfConfig":"16"},{"size":6688,"mtime":1646482837038,"results":"24","hashOfConfig":"16"},{"size":1082,"mtime":1646189963177,"results":"25","hashOfConfig":"16"},{"size":1879,"mtime":1646481394243,"results":"26","hashOfConfig":"16"},{"size":922,"mtime":1646458940067,"results":"27","hashOfConfig":"16"},{"size":1624,"mtime":1646471114181,"results":"28","hashOfConfig":"16"},{"size":5448,"mtime":1646482061292,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1j3mfqd",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\index.js",[],["63","64"],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\App.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\Home.js",["65","66","67"],"import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport ReminderForm from '../components/ReminderForm';\r\nimport ReminderList from '../components/ReminderList';\r\nimport ContactForm from '../components/ContactForm';\r\n\r\nimport { QUERY_USER_CONTACTS, QUERY_USER_REMINDERS, QUERY_USER } from '../utils/queries';\r\nimport Auth from '../utils/auth'\r\n\r\n\r\n\r\nconst Home = () => {\r\n  \r\n\r\n    let user\r\n    if(Auth.loggedIn()) {\r\n        user = Auth.getProfile().data.userName\r\n    }\r\n    //if nobody is logged in doing Ath.getProfile()... breaks the page so it must be in conditional to render at all times \r\n    \r\n    //this must be named \"data\"\r\n    //loading, data, and err are keywords\r\n    const { loading, data } = useQuery(QUERY_USER_CONTACTS, {\r\n        variables: { userName: user }\r\n    })\r\n    const contacts = data?.userContacts || []\r\n    //you cannot do data.userContacts but the data?.userContacts syntax works for whatever reason\r\n\r\n\r\n    //if more than 1 query on a page have to do \"data:reminderData\"\r\n    const { loading: remindersLoading, data: remindersData } = useQuery(QUERY_USER_REMINDERS, {\r\n        variables: {userName: user}\r\n    })\r\n    const reminders = remindersData?.userReminders || []\r\n    console.log(\"remindersData\", reminders)\r\n\r\n    // let myUser\r\n\r\n\r\n\r\n    // if(Auth.loggedIn()) {\r\n    //     const { loading: userLoading, data: userData } = useQuery(QUERY_USER, {\r\n    //         variables: {_id: Auth.getProfile().data._id}\r\n    //     })\r\n    //     myUser = userData?.user || []\r\n    //     console.log(\"userData\", myUser)\r\n    // }\r\n    \r\n    return (\r\n        <main>\r\n            <div>\r\n                <ContactForm user1={user}/>\r\n            </div>\r\n            <div>\r\n                <ReminderForm contacts={contacts} user={user}/>\r\n            </div>\r\n            <div>\r\n                <ReminderList reminders={reminders} title=\"Upcoming Reminders\"/>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\Signup.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\Login.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\pages\\SingleReminder.js",["68","69","70"],"import React from 'react';\r\n\r\n// Import the `useParams()` hook\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport { QUERY_REMINDER } from '../utils/queries';\r\n\r\n\r\nconst SingleReminder = () => {\r\n    const { reminderId } = useParams()\r\n\r\n    console.log(\"reminderId\", reminderId)\r\n\r\n    const { loading, data } = useQuery(QUERY_REMINDER, {\r\n        variables: {\r\n            _id: reminderId\r\n         }\r\n    })\r\n\r\n    console.log(\"data\", data)\r\n    const reminder = data?.reminders || {}\r\n\r\n    const imagePicker = (contactType) => {\r\n        if(contactType == 'phone call') {\r\n            return \"phone.png\"\r\n        }\r\n        else if(contactType == \"text\") {\r\n            return \"text.png\"\r\n        }\r\n        return \"email.png\"\r\n    }\r\n\r\n    //all I had to do was add this to stop the app the from breaking and showing nothing when hitting the back button\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    // console.log(\"reminder object\", reminder)\r\n    // console.log(\"reminder name\", reminder.contact.firstName)\r\n    // console.log(\"reminder message\", reminder.message)\r\n\r\n    //if stops working comment out stuff in return, reminder name console log, and reminder message console log\r\n    //keep reminder object. then re-enable all those things\r\n\r\n    return (\r\n        <div className='card card-reminder-list'>\r\n            <h2 className='text-light reminder-header'>{reminder.contactType} {reminder.contact.firstName} {reminder.contact.lastName}</h2>\r\n            \r\n            <img src={imagePicker(reminder.contactType)}></img>\r\n            <p className='reminder-list-p'>{reminder.date}</p>\r\n            <p className='reminder-list-p message'>Message:</p>\r\n            <p className='reminder-list-p'>{reminder.message}</p>\r\n        </div>\r\n        // <>\r\n        // </>\r\n    )\r\n}\r\n\r\nexport default SingleReminder","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\components\\Header.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\components\\ReminderForm.js",["71","72"],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\utils\\auth.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\utils\\mutations.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\utils\\queries.js",[],"C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\components\\ReminderList.js",["73","74","75"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Auth from '../utils/auth'\r\n\r\nconst ReminderList = ({ reminders, title }) => {\r\n    // console.log(\"reminders\", reminders)\r\n   \r\n    if(!Auth.loggedIn() || !reminders.length) {\r\n        return (<h2>No Reminders Yet. Create some to keep in touch with your contacts!</h2>)\r\n    }  \r\n\r\n    const imagePicker = (contactType) => {\r\n        if(contactType == 'phone call') {\r\n            return \"phone.png\"\r\n        }\r\n        else if(contactType == \"text\") {\r\n            return \"text.png\"\r\n        }\r\n        return \"email.png\"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='reminder-list-title'>{title}</h2>\r\n            {reminders &&\r\n                reminders.map((reminder) => (\r\n                    <div className=\"card card-reminder-list\" key={reminder._id}>\r\n                        \r\n                        \r\n                        <h3 className='text-light reminder-header'>{reminder.contactType} - {`${reminder.contact.firstName} ${reminder.contact.lastName}`}</h3>\r\n                        \r\n                        <img src={imagePicker(reminder.contactType)}></img>\r\n                        <p className=\"reminder-list-p\">{reminder.date}</p>\r\n                        <Link to={`/reminders/${reminder._id}`}>\r\n                            <p className='reminder-list-p'>\r\n                                View and Update this Reminder\r\n                            </p>\r\n                        </Link>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReminderList","C:\\Users\\jcnol\\Documents\\bootcampHW\\project3-react-app\\client\\src\\components\\ContactForm.js",["76","77"],"import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_CONTACT } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst ContactForm = ({ user1 }) => {\r\n\r\n   console.log(\"contact form user:\", user1)\r\n    const [formState, setFormState] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        contactOfUser: user1 \r\n      });\r\n     const [addContact, { error, data }] = useMutation(ADD_CONTACT);\r\n    \r\n      const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n    \r\n        setFormState({\r\n          ...formState,\r\n          [name]: value,\r\n        });\r\n      };\r\n    \r\n      const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formState);\r\n    \r\n        try {\r\n          const { data } = await addContact({\r\n            variables: { ...formState },\r\n          });\r\n          \r\n          setFormState({\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phoneNumber: ''\r\n        })\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      };\r\n    \r\n      return (\r\n          <div>\r\n              {Auth.loggedIn() ?\r\n                     \r\n                         <div className=\"card\">\r\n                             <h4 className=\"text-light p-2 contact-header reminder-form-card-header\">Create Contact</h4>\r\n                             <div className=\"card-body\">\r\n                                     <form onSubmit={handleFormSubmit}>\r\n                                         <label for='firstName'>First Name:</label>\r\n                                         <input\r\n                                             className=\"reminder-form-input\"\r\n                                             placeholder=\"First Name\"\r\n                                             id='firstName'\r\n                                             name=\"firstName\"\r\n                                             type=\"text\"\r\n                                             value={formState.firstName}\r\n                                             onChange={handleChange}\r\n                                         />\r\n                                         <br></br>\r\n                                         <label for='lastName'>Last Name:</label>\r\n                                         <input\r\n                                             className=\"reminder-form-input\"\r\n                                             placeholder=\"Last Name\"\r\n                                             id='lastName'\r\n                                             name=\"lastName\"\r\n                                             type=\"text\"\r\n                                             value={formState.lastName}\r\n                                             onChange={handleChange}\r\n                                         />\r\n                                         <br></br>\r\n                                         <label for='email'>Email:</label>\r\n                                         <input\r\n                                             className=\"reminder-form-input\"\r\n                                             placeholder=\"Your email\"\r\n                                             id='email'\r\n                                             name=\"email\"\r\n                                             type=\"email\"\r\n                                             value={formState.email}\r\n                                             onChange={handleChange}\r\n                                         />\r\n                                         <br></br>\r\n                                         <label for='email'>Phone Number</label>\r\n                                         <input\r\n                                             className=\"reminder-form-input\"\r\n                                             placeholder=\"******\"\r\n                                             id='phoneNumber'\r\n                                             name=\"phoneNumber\"\r\n                                             type=\"text\"\r\n                                             value={formState.password}\r\n                                             onChange={handleChange}\r\n                                         />\r\n                                         <br></br>\r\n                                         <button\r\n                                             className=\"btn btn-reverse btn-reminder\"\r\n                                             style={{ cursor: 'pointer' }}\r\n                                             type=\"submit\"\r\n                                         >\r\n                                             Submit\r\n                                         </button>\r\n                                     </form>\r\n                                 \r\n           \r\n                                 {error && (\r\n                                     <div className=\"my-3 p-3 bg-danger text-white\">\r\n                                     {error.message}\r\n                                     </div>\r\n                                 )}\r\n                             </div>\r\n                         </div>\r\n                    \r\n                \r\n                : (\r\n                    <div>\r\n                    </div>\r\n                )}\r\n          </div>\r\n       \r\n         \r\n)}\r\n\r\nexport default ContactForm",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":7,"column":53,"nodeType":"84","messageId":"85","endLine":7,"endColumn":63},{"ruleId":"82","severity":1,"message":"86","line":23,"column":13,"nodeType":"84","messageId":"85","endLine":23,"endColumn":20},{"ruleId":"82","severity":1,"message":"87","line":31,"column":22,"nodeType":"84","messageId":"85","endLine":31,"endColumn":38},{"ruleId":"88","severity":1,"message":"89","line":25,"column":24,"nodeType":"90","messageId":"91","endLine":25,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":28,"column":29,"nodeType":"90","messageId":"91","endLine":28,"endColumn":31},{"ruleId":"92","severity":1,"message":"93","line":50,"column":13,"nodeType":"94","endLine":50,"endColumn":58},{"ruleId":"82","severity":1,"message":"95","line":26,"column":34,"nodeType":"84","messageId":"85","endLine":26,"endColumn":38},{"ruleId":"82","severity":1,"message":"95","line":35,"column":21,"nodeType":"84","messageId":"85","endLine":35,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":13,"column":24,"nodeType":"90","messageId":"91","endLine":13,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":16,"column":29,"nodeType":"90","messageId":"91","endLine":16,"endColumn":31},{"ruleId":"92","severity":1,"message":"93","line":32,"column":25,"nodeType":"94","endLine":32,"endColumn":70},{"ruleId":"82","severity":1,"message":"95","line":17,"column":34,"nodeType":"84","messageId":"85","endLine":17,"endColumn":38},{"ruleId":"82","severity":1,"message":"95","line":33,"column":19,"nodeType":"84","messageId":"85","endLine":33,"endColumn":23},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'QUERY_USER' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'remindersLoading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]